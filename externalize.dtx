% \iffalse meta-comment
%
% Copyright (C) 2024 by Lukas Heindl <oss.heindl+latex@protonmail.com>
% ---------------------------------------------------------------------------
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Lukas Heindl.
%
% This work consists of the files externalize.dtx and externalize.ins
% and the derived filebase externalize.sty.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{externalize.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<package>\ProvidesPackage{externalize}
%<*package>
    [2024/02/28 v0.0.2 package for externalize with externalization of pgf but use md5 hash for recompile checking]
%</package>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{booktabs}
\usepackage{tabularx}
\usepackage{verbatim}
\usepackage{amsmath}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{externalize.dtx}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v0.0.1}{2024/02/25}{Converted to DTX file}
% \changes{v0.0.2}{2024/02/28}{Add basic documentation and add name feature}
%
% \DoNotIndex{\newcommand,\newenvironment,\pgfkeys,\pgfkeysvalueof,\ProcessPgfOptions,\directlua,\AtEndDocument,\RequirePackage}
%
% \providecommand*{\url}{\texttt}
% \GetFileInfo{externalize.dtx}
% \title{The \textsf{externalize} package}
% \author{Lukas Heindl \\ \url{oss.heindl+latex@protonmail.com}}
% \date{\fileversion~from \filedate}
%
% \maketitle
% 
% \begin{abstract}
% tikzexternal is a library to build parts (pictures\footnote{Note: despite
% using the word \enquote{picture}, you can use this with arbitrary tex-code})
% of a document separately. If you don't specify names for these pictures,
% tikzexternal will automatically generate some. This has the drawback that if
% you reorder or insert pictures, every picture whose name changed needs to be
% rebuilt. This library uses the md5 checksum of the content as name for a
% picture. By doing so it implicitly deduplicates the pictures.
% \end{abstract}
%
% \section{Basic Usage}
% \begin{itemize}
%   \item Load the package: \verb|\usepackage{externalize}|
%   \item Configure:\\
%     \verb|\directlua{externalize.configure{realjobname="main", prefix="figures/"}}|
%   \item Externalize tex-code: \verb|\directlua{externalize.handle_string("tex-code")}|
% \end{itemize}
%
% After each run we check if there were any unused files (generated by this
% package). In case there are, they are being removed to reduce disk usage.
%
% Be aware that \verb|handle_string| needs an unexpanded string and that the
% decision wether to rebuild is also just done on that unexpanded tex-code.
% Thus, if your picture depends on some state outside of the picture, the
% rebuild decision might be wrong.
%
% \subsection{Setting names}
% You can pass an additional $2^\text{nd}$ argument to \verb|handle_string| as
% \verb|name| of that picture. If you set \verb|\jobname| to that name, only
% that picture will be built. This might be useful when tikzing some image but
% you want to avoid typesetting the whole document all the time.
%
% The specified name is only being used if the \verb|\jobname| matches that
% name. In all other cases, the classic name (with the hash) is still being
% used.
%
% Because of the special usecase of this, cleanup is deactivated when running
% with \verb|\jobname| set to a manually set name.
%
% \subsection{Externalize complete files}
% If you have the code for a picture already in a seperate file, you can simply
% use \verb|\directlua{externalize.handle("filename")}| instead of
% \verb|\input|. Just like \verb|handle_string|, you can pass an additional
% $2^\text{nd}$ argument specifying a custom name.
%
% \section{Configuration}
% Configuration can be done via \verb|\directlua{externalize.configure{<config keys>}}|.
% The following keys are available:\\
% \begin{tabularx}{\linewidth}{lX}
%   \\\toprule
%   Option & Description
%   \\\midrule
%   \verb|realjobname| &
%   Needed so that we can detect if the whole document is being processed or just
%   a single picture. 
%   \\
%   \verb|prefix| &
%   This will be the prefix where/how the single built pictures are being stored.
%   You might want to use something like \verb|figures/file-prefix| here to store
%   all built pictures in a separate directory. Note that if you do so,
%   this/these directory/directories have to exist beforehand.
%   \\
%   \verb|pre|/\verb|post| & 
%   As this library requires you to pass the content unexpanded, it might prove
%   diffucult to wrap this properly. You can use these keys to always
%   prepend/append code to the content of the picture. Maybe something like
%   \verb|\begin{tikzpicture}|/\verb|\end{tikzpicture}|
%   \\\bottomrule
% \end{tabularx}
%
% \section{Issues}
% \begin{itemize}
%   \item tikzexternal will automatically (try to) externalize tikzpicture
%   environments and tikz commands
%   \item apparently using \verb|\directlua| and the \verb|external| table
%   doesn't work like outlined here -> write wrapper (might get ugly since
%   verbatim is needed) tex macros with pgfkeys! => quick fix is to simply load
%   the package as\\
%   \verb|\directlua{externalize = require "externalize.lua"}|\\\verb|\AtEndDocument{\directlua{externalize.clean_up()}}|
% \end{itemize}
%
% \section{Still todo}
% \begin{itemize}
%   \item figure out how to properly build the command which builds the
%   individual picture
% \end{itemize}
%
% \section{Example}
% \subsection{Wrap externalize with a command}
% \begin{verbatim}
\usepackage{externalize}
\directlua{externalize.configure{
	pre = [[\unexpanded{\tikzpicture}]],
	post= [[\unexpanded{\endtikzpicture}]],
}}
\NewDocumentCommand{\externTikz}{+v}{%
	\directlua{externalize.handle_string([[#2]])}%
}
\end{verbatim}
%
% In addition you can of course configure the underlying \verb|tikzexternal| if
% you like to.
%
% \StopEventually{}
%
% \section{Implementation}
%
% \iffalse
%<*package>
% \fi
%
%    \begin{macrocode}
\RequirePackage{pgf}
%    \end{macrocode}
% load lua package
%    \begin{macrocode}
\directlua{externalize = require "externalize.lua"}
%    \end{macrocode}
% clean up unused (previously) externalized pdfs to not accumulate lots of unused pdfs
%    \begin{macrocode}
\AtEndDocument{\directlua{externalize.clean_up()}}
%    \end{macrocode}
%
% \iffalse
%</package>
% \fi
%
% \Finale
\endinput
